@page "/R_Moras"
@page "/R_Moras/{MoraId:int}"

@using Prestamos_Blazor.Models;
@using Prestamos_Blazor.BLL

@inject IToastService toastService

<EditForm Model="moras" OnValidSubmit="Guardar">
    <DataAnnotationsValidator></DataAnnotationsValidator>

    <div class="card">


        <div class="card-header">
            <div class="text-center">
                <h3>Registro de Moras</h3>
            </div>
        </div>

        <div class="card-body">
            <form>

                <div class="form-row">

                    <div class="form-group col-sm-5     col-md-5     col-lg-4     col-xl-4">
                        <label><b>Mora ID</b></label>
                        <div class="input-group ">
                            <InputNumber @bind-Value="@moras.MoraId" class="form-control" />
                            <div class="input-group-append">
                                <button type="button" class="btn btn-primary" @onclick="Buscar">Buscar</button>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-3     col-md-2     col-lg-4     col-xl-4" />
                    <div class="col-sm-0     col-md-0     col-lg-1     col-xl-1" />

                    <div class="form-group col-sm-4     col-md-4     col-lg-3     col-xl-3">
                        <label><b>Fecha</b></label>
                        <InputDate @bind-Value="@moras.Fecha" class="form-control" />
                    </div>

                    <div class="form-group col-sm-5     col-md-5     col-lg-4     col-xl-4">
                        <label><b>Prestamo ID</b></label>
                        <select class="form-control" @bind="moras.PretamoId" @onclick="LlenaCombo">
                            <option value="0">---Seleccione un Prestamo---</option>

                            @foreach (var item in listaprestamos)
                            {
                                <option value="@item.PrestamoId">@item.PrestamoId</option>
                            }

                        </select>
                    </div>

                </div>


                <div class="form-group">
                    <label><b>Valor de la Mora</b></label>
                    <InputNumber @bind-Value="Valor_" class="form-control" />
                </div>


                <div>
                    <button type="button" class="btn btn-dark" @onclick="Agregar">Agregar</button>
                </div>


                <div>
                    <table class="table">
                        <thead class="thead-light">
                            <tr>
                                @*<th>Id</th>
                                <th>MoraId</th>*@
                                <th>PrestamoId</th>
                                <th>Valor</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in moras.MorasDetalles)
                            {
                                <tr>
                                    @*<th>@item.Id</th>
                                    <th>@item.MoraId</th>*@
                                    <th>@item.PrestamoId</th>
                                    <th>@item.Valor</th>
                                    <th><button type="button" class="btn btn-outline-danger btn-sm" @onclick="(()=> EliminarPrestamo(item))">Eliminar</button></th>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <div class="form-group">
                    <label><b>TOTAL</b></label>
                    <InputNumber @bind-Value="@moras.Total" class="form-control" Readonly="true" />
                </div>

            </form>

        </div>

       

        <div class="card-footer">
            <div class="form-group text-center" display: inline-block>
                <button type="button" class="btn btn-primary" @onclick="Nuevo">Nuevo</button>
                <button type="submit" class="btn btn-success">Guardar</button>
                <button type="button" class="btn btn-danger" @onclick="Eliminar">Eliminar</button>

            </div>

        </div>

    </div>


</EditForm>


@code {

    [Parameter]
    public int MoraId { get; set; }
    private Moras moras = new Moras();

    private List<Prestamos> listaprestamos = new List<Prestamos>();
    PrestamoBLL prestamoBLL = new PrestamoBLL();

    Prestamos prestamos = new Prestamos();
    private string PrestamoSelect { get; set; }

    private decimal Valor_ = 0;



    protected override void OnInitialized()
    {

        listaprestamos = prestamoBLL.GetList(e => true);
        Nuevo();
        Buscar();
        prestamos = new Prestamos();
        base.OnInitialized();
    }

    private void Buscar()
    {

        if (moras.MoraId != 0)
        {
            var encontrado = MoraBLL.Buscar(moras.MoraId);

            if (encontrado != null)
            {
                this.moras = encontrado;
            }
            else
            {
                toastService.ShowWarning("NO ENCONTRADO");
            }
        }
    }


    private void LlenaCombo()
    {
        prestamos = PrestamoBLL.Buscar(Convert.ToInt32(PrestamoSelect));
    }



    private void Agregar()
    {

        if (Valor_ == 0)
        {
            toastService.ShowWarning("DEBE INGRESAR UN VALOR");
        }
        else

        {
            moras.MorasDetalles.Add(new MorasDetalle()
            {
                //Id = 0,
                //MoraId = moras.MoraId,
                PrestamoId = moras.PretamoId,
                Valor = Valor_,

            });
            CalcularTotal();
            Valor_ = 0;
            PrestamoSelect = "0";

        }

    }


    private void EliminarPrestamo(MorasDetalle Detalle)
    {
        moras.MorasDetalles.Remove(Detalle);
        CalcularTotal();
    }


    private void CalcularTotal()
    {

        decimal Calculo = 0;

        foreach (var item in moras.MorasDetalles)
        {
            Calculo += item.Valor;
        }

        moras.Total = Calculo;


    }




    private void Nuevo()
    {
        this.moras = new Moras();

    }



    private void Guardar()
    {
        bool paso;

        paso = MoraBLL.Guardar(moras);

        if (paso)
        {
            toastService.ShowSuccess("GUARDADO");
            Nuevo();

        }
        else
        {
            toastService.ShowError("NO SE PUDO GUARDAR");
        }

    }

    private void Eliminar()
    {
        bool paso;

        paso = MoraBLL.Eliminar(moras.MoraId);

        if (paso)
        {
            Nuevo();
            toastService.ShowWarning("ELIMINADO");
        }
        else
        {
            toastService.ShowError("NO SE PUDO ELIMINAR");
        }
    }

}
